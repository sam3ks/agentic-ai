services:
  # ---------------------------
  # API Gateway (Kong)
  # ---------------------------
  kong-database:
    image: postgres:13
    container_name: kong-db
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_data:/var/lib/postgresql/data
    restart: unless-stopped

  kong:
    image: kong:3.3
    container_name: kong-gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
    ports:
      - "8000:8000"   # Public API Gateway
      - "8001:8001"   # Kong Admin API
    depends_on:
      - kong-database
    restart: unless-stopped

  konga:  # Optional UI to manage Kong easily
    image: pantsel/konga
    container_name: konga-ui
    environment:
      NODE_ENV: production
    ports:
      - "1337:1337"
    depends_on:
      - kong
    restart: unless-stopped

  # ---------------------------
  # Streamlit UI
  # ---------------------------
  streamlit_ui:
    build:
      context: .
      dockerfile: docker/streamlit_ui/Dockerfile
    command: ["streamlit", "run", "streamlit_app/run_loan_streamlit.py"]
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - .:/app
    depends_on:
      - kong
    restart: unless-stopped

  # ---------------------------
  # Aadhaar API
  # ---------------------------
  aadhaar_api:
    build:
      context: ./services/aadhaar_api
      dockerfile: Dockerfile
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5002"]
    expose:
      - "5002"
    volumes:
      - ./services/aadhaar_api:/app
    restart: unless-stopped

  # ---------------------------
  # Credit Score API
  # ---------------------------
  credit_score_api:
    build:
      context: ./services/credit_score_api
      dockerfile: Dockerfile
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5001"]
    expose:
      - "5001"
    volumes:
      - ./services/credit_score_api:/app
    restart: unless-stopped

  # ---------------------------
  # Human Dashboard
  # ---------------------------
  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard/Dockerfile
    command: ["python", "human_operator_dashboard.py"]
    volumes:
      - .:/app
      - ./escalation_data:/app/escalation_data
    stdin_open: true
    tty: true
    restart: unless-stopped

volumes:
  kong_data:
